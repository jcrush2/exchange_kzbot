#!usr/bin/python3
import datetime
import hashlib
import string
import os
from flask import Flask, request
import peewee as pw
import telebot

import config

TELEGRAM_API = os.environ["telegram_token"]
bot = telebot.TeleBot(TELEGRAM_API)
    
@bot.message_handler(commands=["start"])
def start(msg):
	bot.send_message(msg.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –æ–±–º–µ–Ω–∞ —Ä—É–±–ª–µ–π –Ω–∞ —Ç–µ–Ω–≥–µ",parse_mode="HTML")
	
	main(msg)
	
		
@bot.message_handler(commands=["main"])
def main(msg):
	keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
	khvtrip = telebot.types.KeyboardButton(text="üá∞üáø –û–±–º–µ–Ω RUB->KZ")
	servise = telebot.types.KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")

	keyboard.add( khvtrip, servise)
	bot.send_message(msg.chat.id, "–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ ‚¨áÔ∏è", reply_markup=keyboard)

	
	
@bot.callback_query_handler(func=lambda call: True)
def longname(call):

	if call.data == "exchange":
		sent =bot.send_message(call.message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ö–∞—Å–ø–∏ –±–∞–Ω–∫–∞ ‚¨á")
		bot.register_next_step_handler(sent, love_foto)
		return
	if call.data == "cancel":
		bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–û—Ç–º–µ–Ω–µ–Ω–æ.')
		return
	if call.data == "exchange2":
		
		bot.send_message(-878312423, f"–û–ø–ª–∞—Ç–∏–ª: <a href='tg://user?id={call.from_user.id}'>{call.from_user.first_name}</a> ‚Ññ –∫–∞—Ä—Ç—ã: {name} –°—É–º–º–∞: {summakz} id: {call.from_user.id}", parse_mode="HTML")
		bot.send_message(call.message.chat.id, f"–û–±–º–µ–Ω–Ω–∏–∫: {call.from_user.first_name} –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–µ.\n\n‚Ññ –∫–∞—Ä—Ç—ã: {name} –°—É–º–º–∞: {summakz}\n\n–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã!")
		return

def love_foto(msg):
	if msg.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
		helps(msg)
		return
	if msg.text == "üá∞üáø –û–±–º–µ–Ω RUB->KZ":
		exchange(msg)
		return
	if msg.text.isdigit()!=True:
		bot.send_message(msg.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
		bot.register_next_step_handler(msg, love_foto)
		return
	global name;
	name = msg.text;
	bot.send_message(msg.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã) ‚¨áÔ∏è');
	bot.register_next_step_handler(msg, love_foto2);
	return
	

	
def love_foto2(msg):
	if msg.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
		helps(msg)
		return
	if msg.text == "üá∞üáø –û–±–º–µ–Ω RUB->KZ":
		exchange(msg)
		return
	if msg.text.isdigit()!=True:
		bot.send_message(msg.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã) ‚¨áÔ∏è');
		bot.register_next_step_handler(msg, love_foto2)
		return
	global summakz;
	summakz = msg.text;
	
	markup = telebot.types.InlineKeyboardMarkup()
	button0 = telebot.types.InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏–ª!", callback_data="exchange2")
	button1 = telebot.types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")
	markup.add(button0,button1)
	
	bot.send_message(msg.chat.id, f"–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨á", parse_mode="HTML", reply_markup=markup)
	return




		
		
@bot.message_handler(commands=["helps"])
def helps(msg):
	bot.send_message(msg.chat.id, f"–û–±–º–µ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n\n–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å 7:00 –ø–æ 22:00 –ø–æ –º—Å–∫.\n\n–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ 3-5 –º–∏–Ω.\n\n–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è! –ó–∞—è–≤–∫–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç!\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞ 1000 —Ä—É–±Ô∏è.", parse_mode="HTML")

@bot.message_handler(commands=["exchange"])
def exchange(msg):
	chanel ="–û–±–º–µ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n\n–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å 7:00 –ø–æ 22:00 –ø–æ –º—Å–∫.\n\n–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ 3-5 –º–∏–Ω.\n\n–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è! –ó–∞—è–≤–∫–∏ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç!\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞ 1000 —Ä—É–±Ô∏è."
	markup = telebot.types.InlineKeyboardMarkup()
	button0 = telebot.types.InlineKeyboardButton(text="–û–±–º–µ–Ω—è—Ç—å RUB->KZ", callback_data="exchange")

	markup.add(button0)
	
	sent =bot.send_message(chat_id=msg.chat.id, text=f"{chanel}Ô∏è", reply_markup=markup)
	    
@bot.message_handler(content_types=['text', 'document', 'photo', 'audio', 'video','voice'])
def all_messages(msg):
	TO_CHAT_ID= -878312423
		
	if msg.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
		helps(msg)
		return
		
	if msg.text == "üá∞üáø –û–±–º–µ–Ω RUB->KZ":
		exchange(msg)
		return


	if msg.chat.id == TO_CHAT_ID:
			if '/pay'in msg.text:
				
				if len(msg.text.split()) == 1:
					return
				else:
					n = int(msg.text.split()[1])
					n = abs(n)

					t=datetime.date.today().strftime('%d.%m.%Y')
					bot.send_message(TO_CHAT_ID, f"–°—á–µ—Ç ‚Ññ {msg.message_id} –æ—Ç {t}\n\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ú–ê–û –¢–£–† (QIWI –ë–∞–Ω–∫)\n\n–°—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: <b>{n}</b> —Ä—É–±–ª–µ–π.\n\n<a href='https://qiwi.com/payment/form/99999?amount={n}&extra[%27accountType%27]=nickname&extra[%27account%27]=MAOTUOR&extra[%27comment%27]=MaoTur&blocked[2]=comment&blocked[1]=account'>üí≥ –û–ø–ª–∞—Ç–∏—Ç—å ‚¨ÖÔ∏è</a>", parse_mode="HTML")
	
					bot.copy_message(message_id=msg.message_id+1,chat_id=msg.reply_to_message.	forward_from.id,from_chat_id=msg.chat.id)
					bot.send_message(TO_CHAT_ID, "–°—á–µ—Ç –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É!")
					return
			

			bot.copy_message(message_id=msg.message_id,chat_id=msg.reply_to_message.forward_from.id,from_chat_id=msg.chat.id)
			bot.send_message(TO_CHAT_ID, "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
	else:
		
		bot.forward_message(TO_CHAT_ID, msg.chat.id, msg.message_id)
		bot.send_message(TO_CHAT_ID, f"–û—Ç: <a href='tg://user?id={msg.from_user.id}'>{msg.from_user.first_name}</a> id: {msg.from_user.id}", parse_mode="HTML")
		
		bot.send_message(msg.chat.id, f"–û–±–º–µ–Ω–Ω–∏–∫: {msg.from_user.first_name} –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–µ.")

		

		

# bot.polling(none_stop=True)

# –î–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤
server = Flask(__name__)


@server.route("/bot", methods=['POST'])
def get_message():
	""" TODO """
	decode_json = request.stream.read().decode("utf-8")
	bot.process_new_updates([telebot.types.Update.de_json(decode_json)])
	return "!", 200


@server.route("/")
def webhook_add():
	""" TODO """
	bot.remove_webhook()
	bot.set_webhook(url=config.url)
	return "!", 200

@server.route("/<password>")
def webhook_rem(password):
	""" TODO """
	password_hash = hashlib.md5(bytes(password, encoding="utf-8")).hexdigest()
	if password_hash == "5b4ae01462b2930e129e31636e2fdb68":
		bot.remove_webhook()
		return "Webhook removed", 200
	else:
		return "Invalid password", 200


server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
